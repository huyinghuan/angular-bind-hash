(function(){angular.module("honey.hashBind",[]).factory("honey.utils",["$location",function($location){return{serialize:function(obj){var key,queue,value;queue=[];for(key in obj)value=obj[key],queue.push(""+key+"="+value);return queue.join("&")},unserialize:function(hash){var e,item,obj,query,queue,_i,_len,_results;if(!hash||""===hash)return{};hash=hash.replace(/^#/,""),obj={};try{for(queue=hash.split("&"),_results=[],_i=0,_len=queue.length;_len>_i;_i++)query=queue[_i],item=query.split("="),_results.push(obj[item[0]]=item[1]);return _results}catch(_error){e=_error}finally{return obj}},indexOf:function(arr,item){var index,value,_i,_len;for(arr=arr||[],index=_i=0,_len=arr.length;_len>_i;index=++_i)if(value=arr[index],value===item)return index;return-1},setHash:function(obj){var params;return params=this.unserialize($location.hash()),params=angular.extend(params,obj),$location.hash(this.serialize(params))},getHashObj:function(filed){var obj;return obj=this.unserialize($location.hash()),filed?obj[filed]:obj},bindValueToHash:function(key,value){var params;return params=this.unserialize($location.hash()),params[key]=value,$location.hash(this.serialize(params))},bindHashToInput:function(element,value){return element.val(value)},bindHashToSelect:function(element,value){var option,options,_i,_len,_results;for(options=element.find("option"),_results=[],_i=0,_len=options.length;_len>_i;_i++){if(option=options[_i],option.value===value){option.selected="selected";break}_results.push(void 0)}return _results},bindHashToOption:function(element,key){var params;return params=this.unserialize($location.hash()),params[key]&&element.val()===params[key]?element.attr("selected","selected"):void 0},bindHashToRadio:function(element,value){return element.val()===value?element.attr("checked",!0):void 0},bindHashToCheckbox:function(element,value){var box,queue,_i,_len,_results;for(queue=[],value&&(queue=value.split(",")),_results=[],_i=0,_len=queue.length;_len>_i;_i++){if(box=queue[_i],element.val()===box){element.attr("checked",!0);break}_results.push(void 0)}return _results},bindInputToHash:function(key,value){return this.bindValueToHash(key,value)},bindSelectToHash:function(key,value){return this.bindValueToHash(key,value)},bindRadioToHash:function(key,value,status){return status?this.bindValueToHash(key,value):void 0},bindCheckboxToHash:function(key,value,status){var index,item,newValue,oldValue,params,_i,_len;if(params=this.unserialize($location.hash()),oldValue=params[key]||"",oldValue=""===oldValue?[]:oldValue.split(","),status)index=this.indexOf(oldValue,value),-1===index&&oldValue.push(value);else for(index=_i=0,_len=oldValue.length;_len>_i;index=++_i)if(item=oldValue[index],item===value){oldValue.splice(index,1);break}return newValue=oldValue.join(","),""===newValue?delete params[key]:params[key]=newValue,$location.hash(this.serialize(params))}}}]).provider("hashBind",function(){var T,eventsMap,isListener;return eventsMap={TEXT:["keyup",function(e,cb){return 13===e.keyCode?(e.preventDefault(),cb&&cb()):void 0}],SELECT:["change",function(e,cb){return cb&&cb()}],RADIO:["click",function(e,cb){return cb&&cb()}],CHECKBOX:["click",function(e,cb){return cb&&cb()}]},isListener={TEXT:!0,SELECT:!0,RADIO:!0,CHECKBOX:!0},T=function(){function T(){}return T.prototype.getLisener=function(eleType){return eventsMap[eleType]},T.prototype.hasLisener=function(eleType){return isListener[eleType]},T}(),this.setEventsMap=function(map){var key,value,_results;_results=[];for(key in map)value=map[key],"boolean"==typeof value?_results.push(isListener[key]=value):(value=[].concat(value),1===value.length&&(value[1]=function(e,cb){return cb&&cb()}),_results.push(eventsMap[key]=value));return _results},this.$get=function(){return new T},this}).directive("honeyHashBind",["$timeout","honey.utils","hashBind",function($timeout,utils,config){return{restrict:"A",replace:!1,scope:{name:"@",honeyHashBind:"@",honeyHashValue:"="},link:function($scope,element){var attrName,bindEvent,bindHashToElement,bindValueToHash,checkDefaultValue,eleType;return attrName=$scope.name,eleType="",checkDefaultValue=function(){var defaultValue,field,obj;return defaultValue=$scope.honeyHashBind||$scope.honeyHashValue,null!=defaultValue&&(field=utils.getHashObj(attrName),field||(obj={},obj[attrName]=defaultValue,utils.setHash(obj))),eleType="INPUT"!==element[0].tagName.toUpperCase()?element[0].tagName.toUpperCase():element[0].type.toUpperCase()},bindHashToElement=function(){var value;switch(value=utils.getHashObj(attrName),eleType){case"TEXT":return utils.bindHashToInput(element,value);case"SELECT":return utils.bindHashToSelect(element,value);case"RADIO":return utils.bindHashToRadio(element,value);case"CHECKBOX":return utils.bindHashToCheckbox(element,value);case"OPTION":return $scope.$evalAsync(function(){return utils.bindHashToOption(element,element.parent().attr("name"))});default:return utils.bindHashToInput(element,value)}},bindValueToHash=function(){var value;switch(value=element.val(),eleType){case"TEXT":return utils.bindInputToHash(attrName,value);case"SELECT":return utils.bindSelectToHash(attrName,value);case"RADIO":return utils.bindRadioToHash(attrName,value,element[0].checked);case"CHECKBOX":return utils.bindCheckboxToHash(attrName,value,element[0].checked);case"OPTION":return 0;default:return utils.bindInputToHash(attrName,value)}},$scope.$on("honey:bindHashToElement",function(){return bindHashToElement()}),$scope.$on("honey:bindValueToHash",function(){return bindValueToHash()}),bindEvent=function(){var eventFun,eventName,islistener,listener;return islistener=config.hasLisener(eleType),islistener===!0?(listener=config.getLisener(eleType),eventName=listener[0],eventFun=listener[1],element[0].addEventListener(eventName,function(e){return eventFun(e,function(){return $scope.$apply(bindValueToHash)})})):void 0},$timeout(function(){return checkDefaultValue(),bindHashToElement(),bindEvent()})}}}])}).call(this);